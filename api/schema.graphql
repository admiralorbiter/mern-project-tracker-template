scalar GraphQLDate

enum StatusType {
  New
  Assigned
  Fixed
  Closed
}

type Project {
  _id: ID!
  id: Int!
  title: String!
  status: StatusType!
  owner: String
  effort: Int
  created: GraphQLDate!
  due: GraphQLDate
  description: String
}

"Toned down Project, used as inputs, without server generated values."
input ProjectInputs {
  title: String!
  "Optional, if not supplied, will be set to 'New'"
  status: StatusType = New
  owner: String
  effort: Int
  due: GraphQLDate
  description: String
}

"""Inputs for issueUpdate: all are optional. Whichever is specified will
be set to the given value, undefined fields will remain unmodified."""
input ProjectUpdateInputs {
 title: String
 status: StatusType
 owner: String
 effort: Int
 due: GraphQLDate
 description: String
}

##### Top level declarations

type Query {
  about: String!
  projectList(
    status: StatusType
    effortMin: Int
    effortMax: Int
  ): [Project!]!
  project(id: Int!): Project!
}

type Mutation {
  setAboutMessage(message: String!): String
  projectAdd(project: ProjectInputs!): Project!
  projectUpdate(id: Int!, changes: ProjectUpdateInputs!): Project!
}
